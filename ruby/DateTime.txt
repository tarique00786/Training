================================== DATE AND TIME ============================


3.0.2 :005 > a=Time.new                        #Display the current time
 => 2021-11-24 16:05:56.662810584 +0530  
3.0.2 :006 > a
 => 2021-11-24 16:05:56.662810584 +0530 

3.0.2 :007 > b=Time.new(2007,10,12,11,25,36)   #You can  display the time according your date
 => 2007-10-12 11:25:36 +0530 
3.0.2 :008 > b
 => 2007-10-12 11:25:36 +0530 

3.0.2 :009 > (b-a)/3600                        #Gives the difference in hours
 => -123772.67240633626 
3.0.2 :010 > (a-b)/3600
 => 123772.67240633626 

 ===========================================================================

 3.0.2 :017 > a
 => 2021-11-24 16:05:56.662810584 +0530 

3.0.2 :018 > a+(60*20*10)                      #(time+numeric value) returns time
 => 2021-11-24 19:25:56.662810584 +0530 

============================================================================

3.0.2 :021 > Time.now.asctime                 #Print the time in string format 
 => "Wed Nov 24 16:24:05 2021" 

3.0.2 :022 > Time.now.ctime                   #Same as ctime
 => "Wed Nov 24 16:24:14 2021" 

 ===========================================================================

 3.0.2 :024 > a=Time.now
 => 2021-11-24 16:28:04.727803936 +0530 

3.0.2 :025 > a.ceil                           #Ceils subsecond to a given precision in decimal digits (0 digits by default)
 => 2021-11-24 16:28:05 +0530 

3.0.2 :026 > a.ceil(1)
 => 2021-11-24 16:28:04.8 +0530 

3.0.2 :027 > a.ceil(4)
 => 2021-11-24 16:28:04.7279 +0530 


============================================================================

3.0.2 :029 > Time.now.day                   #Tells day
 => 24 

3.0.2 :030 > Time.now.hour                  #Omits hour
 => 16 

3.0.2 :032 > Time.now.year                  #Omits year
 => 2021 

3.0.2 :033 > Time.now.month                 #Omits month
 => 11 


============================================================================


3.0.2 :039 > a=Time.now
 => 2021-11-24 16:45:26.285447278 +0530 


3.0.2 :041 > b=Time.now
 => 2021-11-24 16:45:44.985102134 +0530 

3.0.2 :042 > a.eql?(b)                           #Returns true or false 
 => false 


============================================================================

3.0.2 :043 > a
 => 2021-11-24 16:45:26.285447278 +0530 

3.0.2 :044 > a.floor                            #Display time by floors subseconds
 => 2021-11-24 16:45:26 +0530 

3.0.2 :045 > a.floor(2)
 => 2021-11-24 16:45:26.28 +0530 

3.0.2 :046 > a.floor(6)
 => 2021-11-24 16:45:26.285447 +0530 


=============================================================================

3.0.2 :048 > t=Time.local(2002,11,12)
 => 2002-11-12 00:00:00 +0530 
3.0.2 :049 > t.friday?                #Returns true if day was/is/will friday
 => false 

3.0.2 :050 > t=Time.local(2002,11,11)
 => 2002-11-11 00:00:00 +0530 
3.0.2 :051 > t.friday?
 => false 

3.0.2 :052 > t=Time.local(2002,11,10)
 => 2002-11-10 00:00:00 +0530 
3.0.2 :053 > t.friday?
 => false 

3.0.2 :054 > t=Time.local(2002,11,9)
 => 2002-11-09 00:00:00 +0530 
3.0.2 :055 > t.friday?
 => false 

3.0.2 :056 > t=Time.local(2002,11,8)
 => 2002-11-08 00:00:00 +0530 
3.0.2 :057 > t.friday?
 => true 

==============================================================

3.0.2 :060 > t=Time.local(2015,11,30,23,59)
 => 2015-11-30 23:59:00 +0530 
3.0.2 :061 > t.gmt?
 => false 

3.0.2 :062 > y=t.getgm                              #Returns a new Time object representing time in UTC.
 => 2015-11-30 18:29:00 UTC                         #getutc works same as getgm

3.0.2 :063 > y.gmt?
 => true 
3.0.2 :064 > t==y
 => true 


===============================================================


3.0.2 :074 > t=Time.local(2003,11,11,11,11,11)
 => 2003-11-11 11:11:11 +0530 

3.0.2 :075 > t.utc?
 => false 

3.0.2 :076 > t.gmt?
 => false 

3.0.2 :077 > t.getutc
 => 2003-11-11 05:41:11 UTC 
3.0.2 :078 > t.gmt?
 => false 

3.0.2 :079 > a=t.getutc
 => 2003-11-11 05:41:11 UTC 

3.0.2 :080 > a.gmt?               #Returns true if time represents a time in UTC (GMT).
 => true 

3.0.2 :081 > a.utc?
 => true 


===============================================================


3.0.2 :082 > t=Time.gm(2006,12,10,11,11,12)
 => 2006-12-10 11:11:12 UTC 

3.0.2 :085 > t.gmt_offset
 => 0 

3.0.2 :086 > l=t.getlocal
 => 2006-12-10 16:41:12 +0530 

3.0.2 :089 > l.gmt_offset           #Returns the offset in seconds between the timezone of time and UTC
 => 19800 


===============================================================

