=============================  HASH  ==========================

==============================Creating Hash===================
3.0.2 :011 > h=Hash.new
 => {} 
3.0.2 :012 > h.class
 => Hash 

3.0.2 :013 > h=Hash[]
 => {} 
3.0.2 :014 > h.class
 => Hash 

3.0.2 :015 > h=Hash[a:1,b:2]
 => {:a=>1, :b=>2} 

3.0.2 :016 > h={a:1,b:2,c:3}
 => {:a=>1, :b=>2, :c=>3} 
3.0.2 :017 > h.class
 => Hash 

=============================================================

3.0.2 :019 > h={'virat':1,'rohit':2,'jadeja':3,'aziz':4}
 => {:virat=>1, :rohit=>2, :jadeja=>3, :aziz=>4} 

3.0.2 :022 > h[:virat]          #Retreive the hash value
 => 1 
3.0.2 :023 > h[:aziz]
 => 4 

3.0.2 :024 > h[:aziz]=10       #Update the hash value
 => 10 
3.0.2 :025 > h
 => {:virat=>1, :rohit=>2, :jadeja=>3, :aziz=>10} 

3.0.2 :026 > h.delete(:aziz)             #Deletes the Hash entry
 => 10 
3.0.2 :027 > h
 => {:virat=>1, :rohit=>2, :jadeja=>3} 


=============================================================

3.0.2 :039 > h1=[:a,:b,:c]
 => [:a, :b, :c] 

3.0.2 :040 > h2=[:d,:e,:f]
 => [:d, :e, :f] 

3.0.2 :041 > h={h1=>0,h2=>1}
 => {[:a, :b, :c]=>0, [:d, :e, :f]=>1} 

3.0.2 :042 > h.include?(h1)                 #True if value is present
 => true 
3.0.2 :043 > h.include?(h2)
 => true 

3.0.2 :044 > h[h1]
 => 0 
3.0.2 :045 > h[h2]
 => 1 
3.0.2 :046 > h1.hash
 => -3184997039892797340 

3.0.2 :048 > h1[0]=:x             #Modyfying value changes its hash value
 => :x 
3.0.2 :049 > h1.hash
 => -1615728257725486878 

 3.0.2 :050 > h.include?(h1)     #Also damage the Hash index
 => false 

 3.0.2 :051 > h[h1]    
 => nil 


===============================================================